{"ast":null,"code":"'use strict';\n\nvar alphabetical = require('is-alphabetical');\n\nvar locate = require('../locate/tag');\n\nvar tag = require('../util/html').tag;\n\nmodule.exports = inlineHTML;\ninlineHTML.locator = locate;\nvar EXPRESSION_HTML_LINK_OPEN = /^<a /i;\nvar EXPRESSION_HTML_LINK_CLOSE = /^<\\/a>/i;\n\nfunction inlineHTML(eat, value, silent) {\n  var self = this;\n  var length = value.length;\n  var character;\n  var subvalue;\n\n  if (value.charAt(0) !== '<' || length < 3) {\n    return;\n  }\n\n  character = value.charAt(1);\n\n  if (!alphabetical(character) && character !== '?' && character !== '!' && character !== '/') {\n    return;\n  }\n\n  subvalue = value.match(tag);\n\n  if (!subvalue) {\n    return;\n  }\n  /* istanbul ignore if - not used yet. */\n\n\n  if (silent) {\n    return true;\n  }\n\n  subvalue = subvalue[0];\n\n  if (!self.inLink && EXPRESSION_HTML_LINK_OPEN.test(subvalue)) {\n    self.inLink = true;\n  } else if (self.inLink && EXPRESSION_HTML_LINK_CLOSE.test(subvalue)) {\n    self.inLink = false;\n  }\n\n  return eat(subvalue)({\n    type: 'html',\n    value: subvalue\n  });\n}","map":{"version":3,"names":["alphabetical","require","locate","tag","module","exports","inlineHTML","locator","EXPRESSION_HTML_LINK_OPEN","EXPRESSION_HTML_LINK_CLOSE","eat","value","silent","self","length","character","subvalue","charAt","match","inLink","test","type"],"sources":["/home/ghaz/PersonalWebsite/node_modules/remark-parse/lib/tokenize/html-inline.js"],"sourcesContent":["'use strict';\n\nvar alphabetical = require('is-alphabetical');\nvar locate = require('../locate/tag');\nvar tag = require('../util/html').tag;\n\nmodule.exports = inlineHTML;\ninlineHTML.locator = locate;\n\nvar EXPRESSION_HTML_LINK_OPEN = /^<a /i;\nvar EXPRESSION_HTML_LINK_CLOSE = /^<\\/a>/i;\n\nfunction inlineHTML(eat, value, silent) {\n  var self = this;\n  var length = value.length;\n  var character;\n  var subvalue;\n\n  if (value.charAt(0) !== '<' || length < 3) {\n    return;\n  }\n\n  character = value.charAt(1);\n\n  if (\n    !alphabetical(character) &&\n    character !== '?' &&\n    character !== '!' &&\n    character !== '/'\n  ) {\n    return;\n  }\n\n  subvalue = value.match(tag);\n\n  if (!subvalue) {\n    return;\n  }\n\n  /* istanbul ignore if - not used yet. */\n  if (silent) {\n    return true;\n  }\n\n  subvalue = subvalue[0];\n\n  if (!self.inLink && EXPRESSION_HTML_LINK_OPEN.test(subvalue)) {\n    self.inLink = true;\n  } else if (self.inLink && EXPRESSION_HTML_LINK_CLOSE.test(subvalue)) {\n    self.inLink = false;\n  }\n\n  return eat(subvalue)({type: 'html', value: subvalue});\n}\n"],"mappings":"AAAA;;AAEA,IAAIA,YAAY,GAAGC,OAAO,CAAC,iBAAD,CAA1B;;AACA,IAAIC,MAAM,GAAGD,OAAO,CAAC,eAAD,CAApB;;AACA,IAAIE,GAAG,GAAGF,OAAO,CAAC,cAAD,CAAP,CAAwBE,GAAlC;;AAEAC,MAAM,CAACC,OAAP,GAAiBC,UAAjB;AACAA,UAAU,CAACC,OAAX,GAAqBL,MAArB;AAEA,IAAIM,yBAAyB,GAAG,OAAhC;AACA,IAAIC,0BAA0B,GAAG,SAAjC;;AAEA,SAASH,UAAT,CAAoBI,GAApB,EAAyBC,KAAzB,EAAgCC,MAAhC,EAAwC;EACtC,IAAIC,IAAI,GAAG,IAAX;EACA,IAAIC,MAAM,GAAGH,KAAK,CAACG,MAAnB;EACA,IAAIC,SAAJ;EACA,IAAIC,QAAJ;;EAEA,IAAIL,KAAK,CAACM,MAAN,CAAa,CAAb,MAAoB,GAApB,IAA2BH,MAAM,GAAG,CAAxC,EAA2C;IACzC;EACD;;EAEDC,SAAS,GAAGJ,KAAK,CAACM,MAAN,CAAa,CAAb,CAAZ;;EAEA,IACE,CAACjB,YAAY,CAACe,SAAD,CAAb,IACAA,SAAS,KAAK,GADd,IAEAA,SAAS,KAAK,GAFd,IAGAA,SAAS,KAAK,GAJhB,EAKE;IACA;EACD;;EAEDC,QAAQ,GAAGL,KAAK,CAACO,KAAN,CAAYf,GAAZ,CAAX;;EAEA,IAAI,CAACa,QAAL,EAAe;IACb;EACD;EAED;;;EACA,IAAIJ,MAAJ,EAAY;IACV,OAAO,IAAP;EACD;;EAEDI,QAAQ,GAAGA,QAAQ,CAAC,CAAD,CAAnB;;EAEA,IAAI,CAACH,IAAI,CAACM,MAAN,IAAgBX,yBAAyB,CAACY,IAA1B,CAA+BJ,QAA/B,CAApB,EAA8D;IAC5DH,IAAI,CAACM,MAAL,GAAc,IAAd;EACD,CAFD,MAEO,IAAIN,IAAI,CAACM,MAAL,IAAeV,0BAA0B,CAACW,IAA3B,CAAgCJ,QAAhC,CAAnB,EAA8D;IACnEH,IAAI,CAACM,MAAL,GAAc,KAAd;EACD;;EAED,OAAOT,GAAG,CAACM,QAAD,CAAH,CAAc;IAACK,IAAI,EAAE,MAAP;IAAeV,KAAK,EAAEK;EAAtB,CAAd,CAAP;AACD"},"metadata":{},"sourceType":"script"}