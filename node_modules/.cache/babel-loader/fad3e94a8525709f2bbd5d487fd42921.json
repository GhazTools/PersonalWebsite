{"ast":null,"code":"'use strict';\n\nvar repeat = require('repeat-string');\n\nvar trim = require('trim-trailing-lines');\n\nmodule.exports = indentedCode;\nvar C_NEWLINE = '\\n';\nvar C_TAB = '\\t';\nvar C_SPACE = ' ';\nvar CODE_INDENT_COUNT = 4;\nvar CODE_INDENT = repeat(C_SPACE, CODE_INDENT_COUNT);\n/* Tokenise indented code. */\n\nfunction indentedCode(eat, value, silent) {\n  var index = -1;\n  var length = value.length;\n  var subvalue = '';\n  var content = '';\n  var subvalueQueue = '';\n  var contentQueue = '';\n  var character;\n  var blankQueue;\n  var indent;\n\n  while (++index < length) {\n    character = value.charAt(index);\n\n    if (indent) {\n      indent = false;\n      subvalue += subvalueQueue;\n      content += contentQueue;\n      subvalueQueue = '';\n      contentQueue = '';\n\n      if (character === C_NEWLINE) {\n        subvalueQueue = character;\n        contentQueue = character;\n      } else {\n        subvalue += character;\n        content += character;\n\n        while (++index < length) {\n          character = value.charAt(index);\n\n          if (!character || character === C_NEWLINE) {\n            contentQueue = character;\n            subvalueQueue = character;\n            break;\n          }\n\n          subvalue += character;\n          content += character;\n        }\n      }\n    } else if (character === C_SPACE && value.charAt(index + 1) === character && value.charAt(index + 2) === character && value.charAt(index + 3) === character) {\n      subvalueQueue += CODE_INDENT;\n      index += 3;\n      indent = true;\n    } else if (character === C_TAB) {\n      subvalueQueue += character;\n      indent = true;\n    } else {\n      blankQueue = '';\n\n      while (character === C_TAB || character === C_SPACE) {\n        blankQueue += character;\n        character = value.charAt(++index);\n      }\n\n      if (character !== C_NEWLINE) {\n        break;\n      }\n\n      subvalueQueue += blankQueue + character;\n      contentQueue += character;\n    }\n  }\n\n  if (content) {\n    if (silent) {\n      return true;\n    }\n\n    return eat(subvalue)({\n      type: 'code',\n      lang: null,\n      value: trim(content)\n    });\n  }\n}","map":{"version":3,"names":["repeat","require","trim","module","exports","indentedCode","C_NEWLINE","C_TAB","C_SPACE","CODE_INDENT_COUNT","CODE_INDENT","eat","value","silent","index","length","subvalue","content","subvalueQueue","contentQueue","character","blankQueue","indent","charAt","type","lang"],"sources":["/Users/ghaz/Documents/projects/PersonalWebsite/node_modules/remark-parse/lib/tokenize/code-indented.js"],"sourcesContent":["'use strict';\n\nvar repeat = require('repeat-string');\nvar trim = require('trim-trailing-lines');\n\nmodule.exports = indentedCode;\n\nvar C_NEWLINE = '\\n';\nvar C_TAB = '\\t';\nvar C_SPACE = ' ';\n\nvar CODE_INDENT_COUNT = 4;\nvar CODE_INDENT = repeat(C_SPACE, CODE_INDENT_COUNT);\n\n/* Tokenise indented code. */\nfunction indentedCode(eat, value, silent) {\n  var index = -1;\n  var length = value.length;\n  var subvalue = '';\n  var content = '';\n  var subvalueQueue = '';\n  var contentQueue = '';\n  var character;\n  var blankQueue;\n  var indent;\n\n  while (++index < length) {\n    character = value.charAt(index);\n\n    if (indent) {\n      indent = false;\n\n      subvalue += subvalueQueue;\n      content += contentQueue;\n      subvalueQueue = '';\n      contentQueue = '';\n\n      if (character === C_NEWLINE) {\n        subvalueQueue = character;\n        contentQueue = character;\n      } else {\n        subvalue += character;\n        content += character;\n\n        while (++index < length) {\n          character = value.charAt(index);\n\n          if (!character || character === C_NEWLINE) {\n            contentQueue = character;\n            subvalueQueue = character;\n            break;\n          }\n\n          subvalue += character;\n          content += character;\n        }\n      }\n    } else if (\n      character === C_SPACE &&\n      value.charAt(index + 1) === character &&\n      value.charAt(index + 2) === character &&\n      value.charAt(index + 3) === character\n    ) {\n      subvalueQueue += CODE_INDENT;\n      index += 3;\n      indent = true;\n    } else if (character === C_TAB) {\n      subvalueQueue += character;\n      indent = true;\n    } else {\n      blankQueue = '';\n\n      while (character === C_TAB || character === C_SPACE) {\n        blankQueue += character;\n        character = value.charAt(++index);\n      }\n\n      if (character !== C_NEWLINE) {\n        break;\n      }\n\n      subvalueQueue += blankQueue + character;\n      contentQueue += character;\n    }\n  }\n\n  if (content) {\n    if (silent) {\n      return true;\n    }\n\n    return eat(subvalue)({\n      type: 'code',\n      lang: null,\n      value: trim(content)\n    });\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}