{"ast":null,"code":"'use strict';\n\nvar whitespace = require('is-whitespace-character');\n\nvar normalize = require('../util/normalize');\n\nmodule.exports = footnoteDefinition;\nfootnoteDefinition.notInList = true;\nfootnoteDefinition.notInBlock = true;\nvar C_BACKSLASH = '\\\\';\nvar C_NEWLINE = '\\n';\nvar C_TAB = '\\t';\nvar C_SPACE = ' ';\nvar C_BRACKET_OPEN = '[';\nvar C_BRACKET_CLOSE = ']';\nvar C_CARET = '^';\nvar C_COLON = ':';\nvar EXPRESSION_INITIAL_TAB = /^( {4}|\\t)?/gm;\n\nfunction footnoteDefinition(eat, value, silent) {\n  var self = this;\n  var offsets = self.offset;\n  var index;\n  var length;\n  var subvalue;\n  var now;\n  var currentLine;\n  var content;\n  var queue;\n  var subqueue;\n  var character;\n  var identifier;\n  var add;\n  var exit;\n\n  if (!self.options.footnotes) {\n    return;\n  }\n\n  index = 0;\n  length = value.length;\n  subvalue = '';\n  now = eat.now();\n  currentLine = now.line;\n\n  while (index < length) {\n    character = value.charAt(index);\n\n    if (!whitespace(character)) {\n      break;\n    }\n\n    subvalue += character;\n    index++;\n  }\n\n  if (value.charAt(index) !== C_BRACKET_OPEN || value.charAt(index + 1) !== C_CARET) {\n    return;\n  }\n\n  subvalue += C_BRACKET_OPEN + C_CARET;\n  index = subvalue.length;\n  queue = '';\n\n  while (index < length) {\n    character = value.charAt(index);\n\n    if (character === C_BRACKET_CLOSE) {\n      break;\n    } else if (character === C_BACKSLASH) {\n      queue += character;\n      index++;\n      character = value.charAt(index);\n    }\n\n    queue += character;\n    index++;\n  }\n\n  if (!queue || value.charAt(index) !== C_BRACKET_CLOSE || value.charAt(index + 1) !== C_COLON) {\n    return;\n  }\n\n  if (silent) {\n    return true;\n  }\n\n  identifier = normalize(queue);\n  subvalue += queue + C_BRACKET_CLOSE + C_COLON;\n  index = subvalue.length;\n\n  while (index < length) {\n    character = value.charAt(index);\n\n    if (character !== C_TAB && character !== C_SPACE) {\n      break;\n    }\n\n    subvalue += character;\n    index++;\n  }\n\n  now.column += subvalue.length;\n  now.offset += subvalue.length;\n  queue = '';\n  content = '';\n  subqueue = '';\n\n  while (index < length) {\n    character = value.charAt(index);\n\n    if (character === C_NEWLINE) {\n      subqueue = character;\n      index++;\n\n      while (index < length) {\n        character = value.charAt(index);\n\n        if (character !== C_NEWLINE) {\n          break;\n        }\n\n        subqueue += character;\n        index++;\n      }\n\n      queue += subqueue;\n      subqueue = '';\n\n      while (index < length) {\n        character = value.charAt(index);\n\n        if (character !== C_SPACE) {\n          break;\n        }\n\n        subqueue += character;\n        index++;\n      }\n\n      if (subqueue.length === 0) {\n        break;\n      }\n\n      queue += subqueue;\n    }\n\n    if (queue) {\n      content += queue;\n      queue = '';\n    }\n\n    content += character;\n    index++;\n  }\n\n  subvalue += content;\n  content = content.replace(EXPRESSION_INITIAL_TAB, function (line) {\n    offsets[currentLine] = (offsets[currentLine] || 0) + line.length;\n    currentLine++;\n    return '';\n  });\n  add = eat(subvalue);\n  exit = self.enterBlock();\n  content = self.tokenizeBlock(content, now);\n  exit();\n  return add({\n    type: 'footnoteDefinition',\n    identifier: identifier,\n    children: content\n  });\n}","map":{"version":3,"names":["whitespace","require","normalize","module","exports","footnoteDefinition","notInList","notInBlock","C_BACKSLASH","C_NEWLINE","C_TAB","C_SPACE","C_BRACKET_OPEN","C_BRACKET_CLOSE","C_CARET","C_COLON","EXPRESSION_INITIAL_TAB","eat","value","silent","self","offsets","offset","index","length","subvalue","now","currentLine","content","queue","subqueue","character","identifier","add","exit","options","footnotes","line","charAt","column","replace","enterBlock","tokenizeBlock","type","children"],"sources":["/Users/ghaz/Documents/projects/PersonalWebsite/node_modules/remark-parse/lib/tokenize/footnote-definition.js"],"sourcesContent":["'use strict';\n\nvar whitespace = require('is-whitespace-character');\nvar normalize = require('../util/normalize');\n\nmodule.exports = footnoteDefinition;\nfootnoteDefinition.notInList = true;\nfootnoteDefinition.notInBlock = true;\n\nvar C_BACKSLASH = '\\\\';\nvar C_NEWLINE = '\\n';\nvar C_TAB = '\\t';\nvar C_SPACE = ' ';\nvar C_BRACKET_OPEN = '[';\nvar C_BRACKET_CLOSE = ']';\nvar C_CARET = '^';\nvar C_COLON = ':';\n\nvar EXPRESSION_INITIAL_TAB = /^( {4}|\\t)?/gm;\n\nfunction footnoteDefinition(eat, value, silent) {\n  var self = this;\n  var offsets = self.offset;\n  var index;\n  var length;\n  var subvalue;\n  var now;\n  var currentLine;\n  var content;\n  var queue;\n  var subqueue;\n  var character;\n  var identifier;\n  var add;\n  var exit;\n\n  if (!self.options.footnotes) {\n    return;\n  }\n\n  index = 0;\n  length = value.length;\n  subvalue = '';\n  now = eat.now();\n  currentLine = now.line;\n\n  while (index < length) {\n    character = value.charAt(index);\n\n    if (!whitespace(character)) {\n      break;\n    }\n\n    subvalue += character;\n    index++;\n  }\n\n  if (\n    value.charAt(index) !== C_BRACKET_OPEN ||\n    value.charAt(index + 1) !== C_CARET\n  ) {\n    return;\n  }\n\n  subvalue += C_BRACKET_OPEN + C_CARET;\n  index = subvalue.length;\n  queue = '';\n\n  while (index < length) {\n    character = value.charAt(index);\n\n    if (character === C_BRACKET_CLOSE) {\n      break;\n    } else if (character === C_BACKSLASH) {\n      queue += character;\n      index++;\n      character = value.charAt(index);\n    }\n\n    queue += character;\n    index++;\n  }\n\n  if (\n    !queue ||\n    value.charAt(index) !== C_BRACKET_CLOSE ||\n    value.charAt(index + 1) !== C_COLON\n  ) {\n    return;\n  }\n\n  if (silent) {\n    return true;\n  }\n\n  identifier = normalize(queue);\n  subvalue += queue + C_BRACKET_CLOSE + C_COLON;\n  index = subvalue.length;\n\n  while (index < length) {\n    character = value.charAt(index);\n\n    if (character !== C_TAB && character !== C_SPACE) {\n      break;\n    }\n\n    subvalue += character;\n    index++;\n  }\n\n  now.column += subvalue.length;\n  now.offset += subvalue.length;\n  queue = '';\n  content = '';\n  subqueue = '';\n\n  while (index < length) {\n    character = value.charAt(index);\n\n    if (character === C_NEWLINE) {\n      subqueue = character;\n      index++;\n\n      while (index < length) {\n        character = value.charAt(index);\n\n        if (character !== C_NEWLINE) {\n          break;\n        }\n\n        subqueue += character;\n        index++;\n      }\n\n      queue += subqueue;\n      subqueue = '';\n\n      while (index < length) {\n        character = value.charAt(index);\n\n        if (character !== C_SPACE) {\n          break;\n        }\n\n        subqueue += character;\n        index++;\n      }\n\n      if (subqueue.length === 0) {\n        break;\n      }\n\n      queue += subqueue;\n    }\n\n    if (queue) {\n      content += queue;\n      queue = '';\n    }\n\n    content += character;\n    index++;\n  }\n\n  subvalue += content;\n\n  content = content.replace(EXPRESSION_INITIAL_TAB, function (line) {\n    offsets[currentLine] = (offsets[currentLine] || 0) + line.length;\n    currentLine++;\n\n    return '';\n  });\n\n  add = eat(subvalue);\n\n  exit = self.enterBlock();\n  content = self.tokenizeBlock(content, now);\n  exit();\n\n  return add({\n    type: 'footnoteDefinition',\n    identifier: identifier,\n    children: content\n  });\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}