{"ast":null,"code":"import dayjs from'dayjs';/**\n * Formats date string.\n * @param isoDate Date in ISO8601 format\n * @param formatStr Format string. Defaults to DD/MM/YYYY.\n * @returns Formatted date\n */export var formatDate=function formatDate(isoDate){var formatStr=arguments.length>1&&arguments[1]!==undefined?arguments[1]:'DD/MM/YYYY';return dayjs(isoDate).format(formatStr);};/**\n * Determines if the due date for the semester is passed or not.\n * @param endDate End date for the semester.\n * @param progress Progress percentage. Use whole number.\n */export var isOverDue=function isOverDue(endDate,progress){var now=dayjs();var end=dayjs(endDate);return now.isAfter(end)&&progress!==100;};","map":{"version":3,"names":["dayjs","formatDate","isoDate","formatStr","format","isOverDue","endDate","progress","now","end","isAfter"],"sources":["/home/ghaz/PersonalWebsite/src/utils/datetime.ts"],"sourcesContent":["import dayjs from 'dayjs';\n\n/**\n * Formats date string.\n * @param isoDate Date in ISO8601 format\n * @param formatStr Format string. Defaults to DD/MM/YYYY.\n * @returns Formatted date\n */\nexport const formatDate = (isoDate: string, formatStr = 'DD/MM/YYYY') => {\n  return dayjs(isoDate).format(formatStr);\n};\n\n/**\n * Determines if the due date for the semester is passed or not.\n * @param endDate End date for the semester.\n * @param progress Progress percentage. Use whole number.\n */\nexport const isOverDue = (endDate: string, progress: number): boolean => {\n  const now = dayjs();\n  const end = dayjs(endDate);\n  return now.isAfter(end) && progress !== 100;\n};\n"],"mappings":"AAAA,MAAOA,MAAP,KAAkB,OAAlB,CAEA;AACA;AACA;AACA;AACA;AACA,GACA,MAAO,IAAMC,WAAU,CAAG,QAAbA,WAAa,CAACC,OAAD,CAA+C,IAA7BC,UAA6B,2DAAjB,YAAiB,CACvE,MAAOH,MAAK,CAACE,OAAD,CAAL,CAAeE,MAAf,CAAsBD,SAAtB,CAAP,CACD,CAFM,CAIP;AACA;AACA;AACA;AACA,GACA,MAAO,IAAME,UAAS,CAAG,QAAZA,UAAY,CAACC,OAAD,CAAkBC,QAAlB,CAAgD,CACvE,GAAMC,IAAG,CAAGR,KAAK,EAAjB,CACA,GAAMS,IAAG,CAAGT,KAAK,CAACM,OAAD,CAAjB,CACA,MAAOE,IAAG,CAACE,OAAJ,CAAYD,GAAZ,GAAoBF,QAAQ,GAAK,GAAxC,CACD,CAJM"},"metadata":{},"sourceType":"module"}