{"ast":null,"code":"'use strict';\n\nvar xtend = require('xtend');\n\nvar entities = require('parse-entities');\n\nmodule.exports = factory;\n/* Factory to create an entity decoder. */\n\nfunction factory(ctx) {\n  decoder.raw = decodeRaw;\n  return decoder;\n  /* Normalize `position` to add an `indent`. */\n\n  function normalize(position) {\n    var offsets = ctx.offset;\n    var line = position.line;\n    var result = [];\n\n    while (++line) {\n      if (!(line in offsets)) {\n        break;\n      }\n\n      result.push((offsets[line] || 0) + 1);\n    }\n\n    return {\n      start: position,\n      indent: result\n    };\n  }\n  /* Handle a warning.\n   * See https://github.com/wooorm/parse-entities\n   * for the warnings. */\n\n\n  function handleWarning(reason, position, code) {\n    if (code === 3) {\n      return;\n    }\n\n    ctx.file.message(reason, position);\n  }\n  /* Decode `value` (at `position`) into text-nodes. */\n\n\n  function decoder(value, position, handler) {\n    entities(value, {\n      position: normalize(position),\n      warning: handleWarning,\n      text: handler,\n      reference: handler,\n      textContext: ctx,\n      referenceContext: ctx\n    });\n  }\n  /* Decode `value` (at `position`) into a string. */\n\n\n  function decodeRaw(value, position, options) {\n    return entities(value, xtend(options, {\n      position: normalize(position),\n      warning: handleWarning\n    }));\n  }\n}","map":{"version":3,"names":["xtend","require","entities","module","exports","factory","ctx","decoder","raw","decodeRaw","normalize","position","offsets","offset","line","result","push","start","indent","handleWarning","reason","code","file","message","value","handler","warning","text","reference","textContext","referenceContext","options"],"sources":["/Users/ghaz/Documents/projects/PersonalWebsite/node_modules/remark-parse/lib/decode.js"],"sourcesContent":["'use strict';\n\nvar xtend = require('xtend');\nvar entities = require('parse-entities');\n\nmodule.exports = factory;\n\n/* Factory to create an entity decoder. */\nfunction factory(ctx) {\n  decoder.raw = decodeRaw;\n\n  return decoder;\n\n  /* Normalize `position` to add an `indent`. */\n  function normalize(position) {\n    var offsets = ctx.offset;\n    var line = position.line;\n    var result = [];\n\n    while (++line) {\n      if (!(line in offsets)) {\n        break;\n      }\n\n      result.push((offsets[line] || 0) + 1);\n    }\n\n    return {\n      start: position,\n      indent: result\n    };\n  }\n\n  /* Handle a warning.\n   * See https://github.com/wooorm/parse-entities\n   * for the warnings. */\n  function handleWarning(reason, position, code) {\n    if (code === 3) {\n      return;\n    }\n\n    ctx.file.message(reason, position);\n  }\n\n  /* Decode `value` (at `position`) into text-nodes. */\n  function decoder(value, position, handler) {\n    entities(value, {\n      position: normalize(position),\n      warning: handleWarning,\n      text: handler,\n      reference: handler,\n      textContext: ctx,\n      referenceContext: ctx\n    });\n  }\n\n  /* Decode `value` (at `position`) into a string. */\n  function decodeRaw(value, position, options) {\n    return entities(value, xtend(options, {\n      position: normalize(position),\n      warning: handleWarning\n    }));\n  }\n}\n"],"mappings":"AAAA;;AAEA,IAAIA,KAAK,GAAGC,OAAO,CAAC,OAAD,CAAnB;;AACA,IAAIC,QAAQ,GAAGD,OAAO,CAAC,gBAAD,CAAtB;;AAEAE,MAAM,CAACC,OAAP,GAAiBC,OAAjB;AAEA;;AACA,SAASA,OAAT,CAAiBC,GAAjB,EAAsB;EACpBC,OAAO,CAACC,GAAR,GAAcC,SAAd;EAEA,OAAOF,OAAP;EAEA;;EACA,SAASG,SAAT,CAAmBC,QAAnB,EAA6B;IAC3B,IAAIC,OAAO,GAAGN,GAAG,CAACO,MAAlB;IACA,IAAIC,IAAI,GAAGH,QAAQ,CAACG,IAApB;IACA,IAAIC,MAAM,GAAG,EAAb;;IAEA,OAAO,EAAED,IAAT,EAAe;MACb,IAAI,EAAEA,IAAI,IAAIF,OAAV,CAAJ,EAAwB;QACtB;MACD;;MAEDG,MAAM,CAACC,IAAP,CAAY,CAACJ,OAAO,CAACE,IAAD,CAAP,IAAiB,CAAlB,IAAuB,CAAnC;IACD;;IAED,OAAO;MACLG,KAAK,EAAEN,QADF;MAELO,MAAM,EAAEH;IAFH,CAAP;EAID;EAED;AACF;AACA;;;EACE,SAASI,aAAT,CAAuBC,MAAvB,EAA+BT,QAA/B,EAAyCU,IAAzC,EAA+C;IAC7C,IAAIA,IAAI,KAAK,CAAb,EAAgB;MACd;IACD;;IAEDf,GAAG,CAACgB,IAAJ,CAASC,OAAT,CAAiBH,MAAjB,EAAyBT,QAAzB;EACD;EAED;;;EACA,SAASJ,OAAT,CAAiBiB,KAAjB,EAAwBb,QAAxB,EAAkCc,OAAlC,EAA2C;IACzCvB,QAAQ,CAACsB,KAAD,EAAQ;MACdb,QAAQ,EAAED,SAAS,CAACC,QAAD,CADL;MAEde,OAAO,EAAEP,aAFK;MAGdQ,IAAI,EAAEF,OAHQ;MAIdG,SAAS,EAAEH,OAJG;MAKdI,WAAW,EAAEvB,GALC;MAMdwB,gBAAgB,EAAExB;IANJ,CAAR,CAAR;EAQD;EAED;;;EACA,SAASG,SAAT,CAAmBe,KAAnB,EAA0Bb,QAA1B,EAAoCoB,OAApC,EAA6C;IAC3C,OAAO7B,QAAQ,CAACsB,KAAD,EAAQxB,KAAK,CAAC+B,OAAD,EAAU;MACpCpB,QAAQ,EAAED,SAAS,CAACC,QAAD,CADiB;MAEpCe,OAAO,EAAEP;IAF2B,CAAV,CAAb,CAAf;EAID;AACF"},"metadata":{},"sourceType":"script"}