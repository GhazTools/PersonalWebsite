{"ast":null,"code":"'use strict';\n\nvar whitespace = require('is-whitespace-character');\n\nvar locate = require('../locate/link');\n\nmodule.exports = link;\nlink.locator = locate;\nvar own = {}.hasOwnProperty;\nvar C_BACKSLASH = '\\\\';\nvar C_BRACKET_OPEN = '[';\nvar C_BRACKET_CLOSE = ']';\nvar C_PAREN_OPEN = '(';\nvar C_PAREN_CLOSE = ')';\nvar C_LT = '<';\nvar C_GT = '>';\nvar C_TICK = '`';\nvar C_DOUBLE_QUOTE = '\"';\nvar C_SINGLE_QUOTE = '\\'';\n/* Map of characters, which can be used to mark link\n * and image titles. */\n\nvar LINK_MARKERS = {};\nLINK_MARKERS[C_DOUBLE_QUOTE] = C_DOUBLE_QUOTE;\nLINK_MARKERS[C_SINGLE_QUOTE] = C_SINGLE_QUOTE;\n/* Map of characters, which can be used to mark link\n * and image titles in commonmark-mode. */\n\nvar COMMONMARK_LINK_MARKERS = {};\nCOMMONMARK_LINK_MARKERS[C_DOUBLE_QUOTE] = C_DOUBLE_QUOTE;\nCOMMONMARK_LINK_MARKERS[C_SINGLE_QUOTE] = C_SINGLE_QUOTE;\nCOMMONMARK_LINK_MARKERS[C_PAREN_OPEN] = C_PAREN_CLOSE;\n\nfunction link(eat, value, silent) {\n  var self = this;\n  var subvalue = '';\n  var index = 0;\n  var character = value.charAt(0);\n  var pedantic = self.options.pedantic;\n  var commonmark = self.options.commonmark;\n  var gfm = self.options.gfm;\n  var closed;\n  var count;\n  var opening;\n  var beforeURL;\n  var beforeTitle;\n  var subqueue;\n  var hasMarker;\n  var markers;\n  var isImage;\n  var content;\n  var marker;\n  var length;\n  var title;\n  var depth;\n  var queue;\n  var url;\n  var now;\n  var exit;\n  var node;\n  /* Detect whether this is an image. */\n\n  if (character === '!') {\n    isImage = true;\n    subvalue = character;\n    character = value.charAt(++index);\n  }\n  /* Eat the opening. */\n\n\n  if (character !== C_BRACKET_OPEN) {\n    return;\n  }\n  /* Exit when this is a link and we’re already inside\n   * a link. */\n\n\n  if (!isImage && self.inLink) {\n    return;\n  }\n\n  subvalue += character;\n  queue = '';\n  index++;\n  /* Eat the content. */\n\n  length = value.length;\n  now = eat.now();\n  depth = 0;\n  now.column += index;\n  now.offset += index;\n\n  while (index < length) {\n    character = value.charAt(index);\n    subqueue = character;\n\n    if (character === C_TICK) {\n      /* Inline-code in link content. */\n      count = 1;\n\n      while (value.charAt(index + 1) === C_TICK) {\n        subqueue += character;\n        index++;\n        count++;\n      }\n\n      if (!opening) {\n        opening = count;\n      } else if (count >= opening) {\n        opening = 0;\n      }\n    } else if (character === C_BACKSLASH) {\n      /* Allow brackets to be escaped. */\n      index++;\n      subqueue += value.charAt(index);\n      /* In GFM mode, brackets in code still count.\n       * In all other modes, they don’t.  This empty\n       * block prevents the next statements are\n       * entered. */\n    } else if ((!opening || gfm) && character === C_BRACKET_OPEN) {\n      depth++;\n    } else if ((!opening || gfm) && character === C_BRACKET_CLOSE) {\n      if (depth) {\n        depth--;\n      } else {\n        /* Allow white-space between content and\n         * url in GFM mode. */\n        if (!pedantic) {\n          while (index < length) {\n            character = value.charAt(index + 1);\n\n            if (!whitespace(character)) {\n              break;\n            }\n\n            subqueue += character;\n            index++;\n          }\n        }\n\n        if (value.charAt(index + 1) !== C_PAREN_OPEN) {\n          return;\n        }\n\n        subqueue += C_PAREN_OPEN;\n        closed = true;\n        index++;\n        break;\n      }\n    }\n\n    queue += subqueue;\n    subqueue = '';\n    index++;\n  }\n  /* Eat the content closing. */\n\n\n  if (!closed) {\n    return;\n  }\n\n  content = queue;\n  subvalue += queue + subqueue;\n  index++;\n  /* Eat white-space. */\n\n  while (index < length) {\n    character = value.charAt(index);\n\n    if (!whitespace(character)) {\n      break;\n    }\n\n    subvalue += character;\n    index++;\n  }\n  /* Eat the URL. */\n\n\n  character = value.charAt(index);\n  markers = commonmark ? COMMONMARK_LINK_MARKERS : LINK_MARKERS;\n  queue = '';\n  beforeURL = subvalue;\n\n  if (character === C_LT) {\n    index++;\n    beforeURL += C_LT;\n\n    while (index < length) {\n      character = value.charAt(index);\n\n      if (character === C_GT) {\n        break;\n      }\n\n      if (commonmark && character === '\\n') {\n        return;\n      }\n\n      queue += character;\n      index++;\n    }\n\n    if (value.charAt(index) !== C_GT) {\n      return;\n    }\n\n    subvalue += C_LT + queue + C_GT;\n    url = queue;\n    index++;\n  } else {\n    character = null;\n    subqueue = '';\n\n    while (index < length) {\n      character = value.charAt(index);\n\n      if (subqueue && own.call(markers, character)) {\n        break;\n      }\n\n      if (whitespace(character)) {\n        if (!pedantic) {\n          break;\n        }\n\n        subqueue += character;\n      } else {\n        if (character === C_PAREN_OPEN) {\n          depth++;\n        } else if (character === C_PAREN_CLOSE) {\n          if (depth === 0) {\n            break;\n          }\n\n          depth--;\n        }\n\n        queue += subqueue;\n        subqueue = '';\n\n        if (character === C_BACKSLASH) {\n          queue += C_BACKSLASH;\n          character = value.charAt(++index);\n        }\n\n        queue += character;\n      }\n\n      index++;\n    }\n\n    subvalue += queue;\n    url = queue;\n    index = subvalue.length;\n  }\n  /* Eat white-space. */\n\n\n  queue = '';\n\n  while (index < length) {\n    character = value.charAt(index);\n\n    if (!whitespace(character)) {\n      break;\n    }\n\n    queue += character;\n    index++;\n  }\n\n  character = value.charAt(index);\n  subvalue += queue;\n  /* Eat the title. */\n\n  if (queue && own.call(markers, character)) {\n    index++;\n    subvalue += character;\n    queue = '';\n    marker = markers[character];\n    beforeTitle = subvalue;\n    /* In commonmark-mode, things are pretty easy: the\n     * marker cannot occur inside the title.\n     *\n     * Non-commonmark does, however, support nested\n     * delimiters. */\n\n    if (commonmark) {\n      while (index < length) {\n        character = value.charAt(index);\n\n        if (character === marker) {\n          break;\n        }\n\n        if (character === C_BACKSLASH) {\n          queue += C_BACKSLASH;\n          character = value.charAt(++index);\n        }\n\n        index++;\n        queue += character;\n      }\n\n      character = value.charAt(index);\n\n      if (character !== marker) {\n        return;\n      }\n\n      title = queue;\n      subvalue += queue + character;\n      index++;\n\n      while (index < length) {\n        character = value.charAt(index);\n\n        if (!whitespace(character)) {\n          break;\n        }\n\n        subvalue += character;\n        index++;\n      }\n    } else {\n      subqueue = '';\n\n      while (index < length) {\n        character = value.charAt(index);\n\n        if (character === marker) {\n          if (hasMarker) {\n            queue += marker + subqueue;\n            subqueue = '';\n          }\n\n          hasMarker = true;\n        } else if (!hasMarker) {\n          queue += character;\n        } else if (character === C_PAREN_CLOSE) {\n          subvalue += queue + marker + subqueue;\n          title = queue;\n          break;\n        } else if (whitespace(character)) {\n          subqueue += character;\n        } else {\n          queue += marker + subqueue + character;\n          subqueue = '';\n          hasMarker = false;\n        }\n\n        index++;\n      }\n    }\n  }\n\n  if (value.charAt(index) !== C_PAREN_CLOSE) {\n    return;\n  }\n  /* istanbul ignore if - never used (yet) */\n\n\n  if (silent) {\n    return true;\n  }\n\n  subvalue += C_PAREN_CLOSE;\n  url = self.decode.raw(self.unescape(url), eat(beforeURL).test().end, {\n    nonTerminated: false\n  });\n\n  if (title) {\n    beforeTitle = eat(beforeTitle).test().end;\n    title = self.decode.raw(self.unescape(title), beforeTitle);\n  }\n\n  node = {\n    type: isImage ? 'image' : 'link',\n    title: title || null,\n    url: url\n  };\n\n  if (isImage) {\n    node.alt = self.decode.raw(self.unescape(content), now) || null;\n  } else {\n    exit = self.enterLink();\n    node.children = self.tokenizeInline(content, now);\n    exit();\n  }\n\n  return eat(subvalue)(node);\n}","map":{"version":3,"names":["whitespace","require","locate","module","exports","link","locator","own","hasOwnProperty","C_BACKSLASH","C_BRACKET_OPEN","C_BRACKET_CLOSE","C_PAREN_OPEN","C_PAREN_CLOSE","C_LT","C_GT","C_TICK","C_DOUBLE_QUOTE","C_SINGLE_QUOTE","LINK_MARKERS","COMMONMARK_LINK_MARKERS","eat","value","silent","self","subvalue","index","character","charAt","pedantic","options","commonmark","gfm","closed","count","opening","beforeURL","beforeTitle","subqueue","hasMarker","markers","isImage","content","marker","length","title","depth","queue","url","now","exit","node","inLink","column","offset","call","decode","raw","unescape","test","end","nonTerminated","type","alt","enterLink","children","tokenizeInline"],"sources":["/Users/ghaz/Documents/projects/PersonalWebsite/node_modules/remark-parse/lib/tokenize/link.js"],"sourcesContent":["'use strict';\n\nvar whitespace = require('is-whitespace-character');\nvar locate = require('../locate/link');\n\nmodule.exports = link;\nlink.locator = locate;\n\nvar own = {}.hasOwnProperty;\n\nvar C_BACKSLASH = '\\\\';\nvar C_BRACKET_OPEN = '[';\nvar C_BRACKET_CLOSE = ']';\nvar C_PAREN_OPEN = '(';\nvar C_PAREN_CLOSE = ')';\nvar C_LT = '<';\nvar C_GT = '>';\nvar C_TICK = '`';\nvar C_DOUBLE_QUOTE = '\"';\nvar C_SINGLE_QUOTE = '\\'';\n\n/* Map of characters, which can be used to mark link\n * and image titles. */\nvar LINK_MARKERS = {};\n\nLINK_MARKERS[C_DOUBLE_QUOTE] = C_DOUBLE_QUOTE;\nLINK_MARKERS[C_SINGLE_QUOTE] = C_SINGLE_QUOTE;\n\n/* Map of characters, which can be used to mark link\n * and image titles in commonmark-mode. */\nvar COMMONMARK_LINK_MARKERS = {};\n\nCOMMONMARK_LINK_MARKERS[C_DOUBLE_QUOTE] = C_DOUBLE_QUOTE;\nCOMMONMARK_LINK_MARKERS[C_SINGLE_QUOTE] = C_SINGLE_QUOTE;\nCOMMONMARK_LINK_MARKERS[C_PAREN_OPEN] = C_PAREN_CLOSE;\n\nfunction link(eat, value, silent) {\n  var self = this;\n  var subvalue = '';\n  var index = 0;\n  var character = value.charAt(0);\n  var pedantic = self.options.pedantic;\n  var commonmark = self.options.commonmark;\n  var gfm = self.options.gfm;\n  var closed;\n  var count;\n  var opening;\n  var beforeURL;\n  var beforeTitle;\n  var subqueue;\n  var hasMarker;\n  var markers;\n  var isImage;\n  var content;\n  var marker;\n  var length;\n  var title;\n  var depth;\n  var queue;\n  var url;\n  var now;\n  var exit;\n  var node;\n\n  /* Detect whether this is an image. */\n  if (character === '!') {\n    isImage = true;\n    subvalue = character;\n    character = value.charAt(++index);\n  }\n\n  /* Eat the opening. */\n  if (character !== C_BRACKET_OPEN) {\n    return;\n  }\n\n  /* Exit when this is a link and we’re already inside\n   * a link. */\n  if (!isImage && self.inLink) {\n    return;\n  }\n\n  subvalue += character;\n  queue = '';\n  index++;\n\n  /* Eat the content. */\n  length = value.length;\n  now = eat.now();\n  depth = 0;\n\n  now.column += index;\n  now.offset += index;\n\n  while (index < length) {\n    character = value.charAt(index);\n    subqueue = character;\n\n    if (character === C_TICK) {\n      /* Inline-code in link content. */\n      count = 1;\n\n      while (value.charAt(index + 1) === C_TICK) {\n        subqueue += character;\n        index++;\n        count++;\n      }\n\n      if (!opening) {\n        opening = count;\n      } else if (count >= opening) {\n        opening = 0;\n      }\n    } else if (character === C_BACKSLASH) {\n      /* Allow brackets to be escaped. */\n      index++;\n      subqueue += value.charAt(index);\n    /* In GFM mode, brackets in code still count.\n     * In all other modes, they don’t.  This empty\n     * block prevents the next statements are\n     * entered. */\n    } else if ((!opening || gfm) && character === C_BRACKET_OPEN) {\n      depth++;\n    } else if ((!opening || gfm) && character === C_BRACKET_CLOSE) {\n      if (depth) {\n        depth--;\n      } else {\n        /* Allow white-space between content and\n         * url in GFM mode. */\n        if (!pedantic) {\n          while (index < length) {\n            character = value.charAt(index + 1);\n\n            if (!whitespace(character)) {\n              break;\n            }\n\n            subqueue += character;\n            index++;\n          }\n        }\n\n        if (value.charAt(index + 1) !== C_PAREN_OPEN) {\n          return;\n        }\n\n        subqueue += C_PAREN_OPEN;\n        closed = true;\n        index++;\n\n        break;\n      }\n    }\n\n    queue += subqueue;\n    subqueue = '';\n    index++;\n  }\n\n  /* Eat the content closing. */\n  if (!closed) {\n    return;\n  }\n\n  content = queue;\n  subvalue += queue + subqueue;\n  index++;\n\n  /* Eat white-space. */\n  while (index < length) {\n    character = value.charAt(index);\n\n    if (!whitespace(character)) {\n      break;\n    }\n\n    subvalue += character;\n    index++;\n  }\n\n  /* Eat the URL. */\n  character = value.charAt(index);\n  markers = commonmark ? COMMONMARK_LINK_MARKERS : LINK_MARKERS;\n  queue = '';\n  beforeURL = subvalue;\n\n  if (character === C_LT) {\n    index++;\n    beforeURL += C_LT;\n\n    while (index < length) {\n      character = value.charAt(index);\n\n      if (character === C_GT) {\n        break;\n      }\n\n      if (commonmark && character === '\\n') {\n        return;\n      }\n\n      queue += character;\n      index++;\n    }\n\n    if (value.charAt(index) !== C_GT) {\n      return;\n    }\n\n    subvalue += C_LT + queue + C_GT;\n    url = queue;\n    index++;\n  } else {\n    character = null;\n    subqueue = '';\n\n    while (index < length) {\n      character = value.charAt(index);\n\n      if (subqueue && own.call(markers, character)) {\n        break;\n      }\n\n      if (whitespace(character)) {\n        if (!pedantic) {\n          break;\n        }\n\n        subqueue += character;\n      } else {\n        if (character === C_PAREN_OPEN) {\n          depth++;\n        } else if (character === C_PAREN_CLOSE) {\n          if (depth === 0) {\n            break;\n          }\n\n          depth--;\n        }\n\n        queue += subqueue;\n        subqueue = '';\n\n        if (character === C_BACKSLASH) {\n          queue += C_BACKSLASH;\n          character = value.charAt(++index);\n        }\n\n        queue += character;\n      }\n\n      index++;\n    }\n\n    subvalue += queue;\n    url = queue;\n    index = subvalue.length;\n  }\n\n  /* Eat white-space. */\n  queue = '';\n\n  while (index < length) {\n    character = value.charAt(index);\n\n    if (!whitespace(character)) {\n      break;\n    }\n\n    queue += character;\n    index++;\n  }\n\n  character = value.charAt(index);\n  subvalue += queue;\n\n  /* Eat the title. */\n  if (queue && own.call(markers, character)) {\n    index++;\n    subvalue += character;\n    queue = '';\n    marker = markers[character];\n    beforeTitle = subvalue;\n\n    /* In commonmark-mode, things are pretty easy: the\n     * marker cannot occur inside the title.\n     *\n     * Non-commonmark does, however, support nested\n     * delimiters. */\n    if (commonmark) {\n      while (index < length) {\n        character = value.charAt(index);\n\n        if (character === marker) {\n          break;\n        }\n\n        if (character === C_BACKSLASH) {\n          queue += C_BACKSLASH;\n          character = value.charAt(++index);\n        }\n\n        index++;\n        queue += character;\n      }\n\n      character = value.charAt(index);\n\n      if (character !== marker) {\n        return;\n      }\n\n      title = queue;\n      subvalue += queue + character;\n      index++;\n\n      while (index < length) {\n        character = value.charAt(index);\n\n        if (!whitespace(character)) {\n          break;\n        }\n\n        subvalue += character;\n        index++;\n      }\n    } else {\n      subqueue = '';\n\n      while (index < length) {\n        character = value.charAt(index);\n\n        if (character === marker) {\n          if (hasMarker) {\n            queue += marker + subqueue;\n            subqueue = '';\n          }\n\n          hasMarker = true;\n        } else if (!hasMarker) {\n          queue += character;\n        } else if (character === C_PAREN_CLOSE) {\n          subvalue += queue + marker + subqueue;\n          title = queue;\n          break;\n        } else if (whitespace(character)) {\n          subqueue += character;\n        } else {\n          queue += marker + subqueue + character;\n          subqueue = '';\n          hasMarker = false;\n        }\n\n        index++;\n      }\n    }\n  }\n\n  if (value.charAt(index) !== C_PAREN_CLOSE) {\n    return;\n  }\n\n  /* istanbul ignore if - never used (yet) */\n  if (silent) {\n    return true;\n  }\n\n  subvalue += C_PAREN_CLOSE;\n\n  url = self.decode.raw(self.unescape(url), eat(beforeURL).test().end, {nonTerminated: false});\n\n  if (title) {\n    beforeTitle = eat(beforeTitle).test().end;\n    title = self.decode.raw(self.unescape(title), beforeTitle);\n  }\n\n  node = {\n    type: isImage ? 'image' : 'link',\n    title: title || null,\n    url: url\n  };\n\n  if (isImage) {\n    node.alt = self.decode.raw(self.unescape(content), now) || null;\n  } else {\n    exit = self.enterLink();\n    node.children = self.tokenizeInline(content, now);\n    exit();\n  }\n\n  return eat(subvalue)(node);\n}\n"],"mappings":"AAAA;;AAEA,IAAIA,UAAU,GAAGC,OAAO,CAAC,yBAAD,CAAxB;;AACA,IAAIC,MAAM,GAAGD,OAAO,CAAC,gBAAD,CAApB;;AAEAE,MAAM,CAACC,OAAP,GAAiBC,IAAjB;AACAA,IAAI,CAACC,OAAL,GAAeJ,MAAf;AAEA,IAAIK,GAAG,GAAG,GAAGC,cAAb;AAEA,IAAIC,WAAW,GAAG,IAAlB;AACA,IAAIC,cAAc,GAAG,GAArB;AACA,IAAIC,eAAe,GAAG,GAAtB;AACA,IAAIC,YAAY,GAAG,GAAnB;AACA,IAAIC,aAAa,GAAG,GAApB;AACA,IAAIC,IAAI,GAAG,GAAX;AACA,IAAIC,IAAI,GAAG,GAAX;AACA,IAAIC,MAAM,GAAG,GAAb;AACA,IAAIC,cAAc,GAAG,GAArB;AACA,IAAIC,cAAc,GAAG,IAArB;AAEA;AACA;;AACA,IAAIC,YAAY,GAAG,EAAnB;AAEAA,YAAY,CAACF,cAAD,CAAZ,GAA+BA,cAA/B;AACAE,YAAY,CAACD,cAAD,CAAZ,GAA+BA,cAA/B;AAEA;AACA;;AACA,IAAIE,uBAAuB,GAAG,EAA9B;AAEAA,uBAAuB,CAACH,cAAD,CAAvB,GAA0CA,cAA1C;AACAG,uBAAuB,CAACF,cAAD,CAAvB,GAA0CA,cAA1C;AACAE,uBAAuB,CAACR,YAAD,CAAvB,GAAwCC,aAAxC;;AAEA,SAASR,IAAT,CAAcgB,GAAd,EAAmBC,KAAnB,EAA0BC,MAA1B,EAAkC;EAChC,IAAIC,IAAI,GAAG,IAAX;EACA,IAAIC,QAAQ,GAAG,EAAf;EACA,IAAIC,KAAK,GAAG,CAAZ;EACA,IAAIC,SAAS,GAAGL,KAAK,CAACM,MAAN,CAAa,CAAb,CAAhB;EACA,IAAIC,QAAQ,GAAGL,IAAI,CAACM,OAAL,CAAaD,QAA5B;EACA,IAAIE,UAAU,GAAGP,IAAI,CAACM,OAAL,CAAaC,UAA9B;EACA,IAAIC,GAAG,GAAGR,IAAI,CAACM,OAAL,CAAaE,GAAvB;EACA,IAAIC,MAAJ;EACA,IAAIC,KAAJ;EACA,IAAIC,OAAJ;EACA,IAAIC,SAAJ;EACA,IAAIC,WAAJ;EACA,IAAIC,QAAJ;EACA,IAAIC,SAAJ;EACA,IAAIC,OAAJ;EACA,IAAIC,OAAJ;EACA,IAAIC,OAAJ;EACA,IAAIC,MAAJ;EACA,IAAIC,MAAJ;EACA,IAAIC,KAAJ;EACA,IAAIC,KAAJ;EACA,IAAIC,KAAJ;EACA,IAAIC,GAAJ;EACA,IAAIC,GAAJ;EACA,IAAIC,IAAJ;EACA,IAAIC,IAAJ;EAEA;;EACA,IAAIxB,SAAS,KAAK,GAAlB,EAAuB;IACrBc,OAAO,GAAG,IAAV;IACAhB,QAAQ,GAAGE,SAAX;IACAA,SAAS,GAAGL,KAAK,CAACM,MAAN,CAAa,EAAEF,KAAf,CAAZ;EACD;EAED;;;EACA,IAAIC,SAAS,KAAKjB,cAAlB,EAAkC;IAChC;EACD;EAED;AACF;;;EACE,IAAI,CAAC+B,OAAD,IAAYjB,IAAI,CAAC4B,MAArB,EAA6B;IAC3B;EACD;;EAED3B,QAAQ,IAAIE,SAAZ;EACAoB,KAAK,GAAG,EAAR;EACArB,KAAK;EAEL;;EACAkB,MAAM,GAAGtB,KAAK,CAACsB,MAAf;EACAK,GAAG,GAAG5B,GAAG,CAAC4B,GAAJ,EAAN;EACAH,KAAK,GAAG,CAAR;EAEAG,GAAG,CAACI,MAAJ,IAAc3B,KAAd;EACAuB,GAAG,CAACK,MAAJ,IAAc5B,KAAd;;EAEA,OAAOA,KAAK,GAAGkB,MAAf,EAAuB;IACrBjB,SAAS,GAAGL,KAAK,CAACM,MAAN,CAAaF,KAAb,CAAZ;IACAY,QAAQ,GAAGX,SAAX;;IAEA,IAAIA,SAAS,KAAKX,MAAlB,EAA0B;MACxB;MACAkB,KAAK,GAAG,CAAR;;MAEA,OAAOZ,KAAK,CAACM,MAAN,CAAaF,KAAK,GAAG,CAArB,MAA4BV,MAAnC,EAA2C;QACzCsB,QAAQ,IAAIX,SAAZ;QACAD,KAAK;QACLQ,KAAK;MACN;;MAED,IAAI,CAACC,OAAL,EAAc;QACZA,OAAO,GAAGD,KAAV;MACD,CAFD,MAEO,IAAIA,KAAK,IAAIC,OAAb,EAAsB;QAC3BA,OAAO,GAAG,CAAV;MACD;IACF,CAfD,MAeO,IAAIR,SAAS,KAAKlB,WAAlB,EAA+B;MACpC;MACAiB,KAAK;MACLY,QAAQ,IAAIhB,KAAK,CAACM,MAAN,CAAaF,KAAb,CAAZ;MACF;AACJ;AACA;AACA;IACK,CARM,MAQA,IAAI,CAAC,CAACS,OAAD,IAAYH,GAAb,KAAqBL,SAAS,KAAKjB,cAAvC,EAAuD;MAC5DoC,KAAK;IACN,CAFM,MAEA,IAAI,CAAC,CAACX,OAAD,IAAYH,GAAb,KAAqBL,SAAS,KAAKhB,eAAvC,EAAwD;MAC7D,IAAImC,KAAJ,EAAW;QACTA,KAAK;MACN,CAFD,MAEO;QACL;AACR;QACQ,IAAI,CAACjB,QAAL,EAAe;UACb,OAAOH,KAAK,GAAGkB,MAAf,EAAuB;YACrBjB,SAAS,GAAGL,KAAK,CAACM,MAAN,CAAaF,KAAK,GAAG,CAArB,CAAZ;;YAEA,IAAI,CAAC1B,UAAU,CAAC2B,SAAD,CAAf,EAA4B;cAC1B;YACD;;YAEDW,QAAQ,IAAIX,SAAZ;YACAD,KAAK;UACN;QACF;;QAED,IAAIJ,KAAK,CAACM,MAAN,CAAaF,KAAK,GAAG,CAArB,MAA4Bd,YAAhC,EAA8C;UAC5C;QACD;;QAED0B,QAAQ,IAAI1B,YAAZ;QACAqB,MAAM,GAAG,IAAT;QACAP,KAAK;QAEL;MACD;IACF;;IAEDqB,KAAK,IAAIT,QAAT;IACAA,QAAQ,GAAG,EAAX;IACAZ,KAAK;EACN;EAED;;;EACA,IAAI,CAACO,MAAL,EAAa;IACX;EACD;;EAEDS,OAAO,GAAGK,KAAV;EACAtB,QAAQ,IAAIsB,KAAK,GAAGT,QAApB;EACAZ,KAAK;EAEL;;EACA,OAAOA,KAAK,GAAGkB,MAAf,EAAuB;IACrBjB,SAAS,GAAGL,KAAK,CAACM,MAAN,CAAaF,KAAb,CAAZ;;IAEA,IAAI,CAAC1B,UAAU,CAAC2B,SAAD,CAAf,EAA4B;MAC1B;IACD;;IAEDF,QAAQ,IAAIE,SAAZ;IACAD,KAAK;EACN;EAED;;;EACAC,SAAS,GAAGL,KAAK,CAACM,MAAN,CAAaF,KAAb,CAAZ;EACAc,OAAO,GAAGT,UAAU,GAAGX,uBAAH,GAA6BD,YAAjD;EACA4B,KAAK,GAAG,EAAR;EACAX,SAAS,GAAGX,QAAZ;;EAEA,IAAIE,SAAS,KAAKb,IAAlB,EAAwB;IACtBY,KAAK;IACLU,SAAS,IAAItB,IAAb;;IAEA,OAAOY,KAAK,GAAGkB,MAAf,EAAuB;MACrBjB,SAAS,GAAGL,KAAK,CAACM,MAAN,CAAaF,KAAb,CAAZ;;MAEA,IAAIC,SAAS,KAAKZ,IAAlB,EAAwB;QACtB;MACD;;MAED,IAAIgB,UAAU,IAAIJ,SAAS,KAAK,IAAhC,EAAsC;QACpC;MACD;;MAEDoB,KAAK,IAAIpB,SAAT;MACAD,KAAK;IACN;;IAED,IAAIJ,KAAK,CAACM,MAAN,CAAaF,KAAb,MAAwBX,IAA5B,EAAkC;MAChC;IACD;;IAEDU,QAAQ,IAAIX,IAAI,GAAGiC,KAAP,GAAehC,IAA3B;IACAiC,GAAG,GAAGD,KAAN;IACArB,KAAK;EACN,CA1BD,MA0BO;IACLC,SAAS,GAAG,IAAZ;IACAW,QAAQ,GAAG,EAAX;;IAEA,OAAOZ,KAAK,GAAGkB,MAAf,EAAuB;MACrBjB,SAAS,GAAGL,KAAK,CAACM,MAAN,CAAaF,KAAb,CAAZ;;MAEA,IAAIY,QAAQ,IAAI/B,GAAG,CAACgD,IAAJ,CAASf,OAAT,EAAkBb,SAAlB,CAAhB,EAA8C;QAC5C;MACD;;MAED,IAAI3B,UAAU,CAAC2B,SAAD,CAAd,EAA2B;QACzB,IAAI,CAACE,QAAL,EAAe;UACb;QACD;;QAEDS,QAAQ,IAAIX,SAAZ;MACD,CAND,MAMO;QACL,IAAIA,SAAS,KAAKf,YAAlB,EAAgC;UAC9BkC,KAAK;QACN,CAFD,MAEO,IAAInB,SAAS,KAAKd,aAAlB,EAAiC;UACtC,IAAIiC,KAAK,KAAK,CAAd,EAAiB;YACf;UACD;;UAEDA,KAAK;QACN;;QAEDC,KAAK,IAAIT,QAAT;QACAA,QAAQ,GAAG,EAAX;;QAEA,IAAIX,SAAS,KAAKlB,WAAlB,EAA+B;UAC7BsC,KAAK,IAAItC,WAAT;UACAkB,SAAS,GAAGL,KAAK,CAACM,MAAN,CAAa,EAAEF,KAAf,CAAZ;QACD;;QAEDqB,KAAK,IAAIpB,SAAT;MACD;;MAEDD,KAAK;IACN;;IAEDD,QAAQ,IAAIsB,KAAZ;IACAC,GAAG,GAAGD,KAAN;IACArB,KAAK,GAAGD,QAAQ,CAACmB,MAAjB;EACD;EAED;;;EACAG,KAAK,GAAG,EAAR;;EAEA,OAAOrB,KAAK,GAAGkB,MAAf,EAAuB;IACrBjB,SAAS,GAAGL,KAAK,CAACM,MAAN,CAAaF,KAAb,CAAZ;;IAEA,IAAI,CAAC1B,UAAU,CAAC2B,SAAD,CAAf,EAA4B;MAC1B;IACD;;IAEDoB,KAAK,IAAIpB,SAAT;IACAD,KAAK;EACN;;EAEDC,SAAS,GAAGL,KAAK,CAACM,MAAN,CAAaF,KAAb,CAAZ;EACAD,QAAQ,IAAIsB,KAAZ;EAEA;;EACA,IAAIA,KAAK,IAAIxC,GAAG,CAACgD,IAAJ,CAASf,OAAT,EAAkBb,SAAlB,CAAb,EAA2C;IACzCD,KAAK;IACLD,QAAQ,IAAIE,SAAZ;IACAoB,KAAK,GAAG,EAAR;IACAJ,MAAM,GAAGH,OAAO,CAACb,SAAD,CAAhB;IACAU,WAAW,GAAGZ,QAAd;IAEA;AACJ;AACA;AACA;AACA;;IACI,IAAIM,UAAJ,EAAgB;MACd,OAAOL,KAAK,GAAGkB,MAAf,EAAuB;QACrBjB,SAAS,GAAGL,KAAK,CAACM,MAAN,CAAaF,KAAb,CAAZ;;QAEA,IAAIC,SAAS,KAAKgB,MAAlB,EAA0B;UACxB;QACD;;QAED,IAAIhB,SAAS,KAAKlB,WAAlB,EAA+B;UAC7BsC,KAAK,IAAItC,WAAT;UACAkB,SAAS,GAAGL,KAAK,CAACM,MAAN,CAAa,EAAEF,KAAf,CAAZ;QACD;;QAEDA,KAAK;QACLqB,KAAK,IAAIpB,SAAT;MACD;;MAEDA,SAAS,GAAGL,KAAK,CAACM,MAAN,CAAaF,KAAb,CAAZ;;MAEA,IAAIC,SAAS,KAAKgB,MAAlB,EAA0B;QACxB;MACD;;MAEDE,KAAK,GAAGE,KAAR;MACAtB,QAAQ,IAAIsB,KAAK,GAAGpB,SAApB;MACAD,KAAK;;MAEL,OAAOA,KAAK,GAAGkB,MAAf,EAAuB;QACrBjB,SAAS,GAAGL,KAAK,CAACM,MAAN,CAAaF,KAAb,CAAZ;;QAEA,IAAI,CAAC1B,UAAU,CAAC2B,SAAD,CAAf,EAA4B;UAC1B;QACD;;QAEDF,QAAQ,IAAIE,SAAZ;QACAD,KAAK;MACN;IACF,CArCD,MAqCO;MACLY,QAAQ,GAAG,EAAX;;MAEA,OAAOZ,KAAK,GAAGkB,MAAf,EAAuB;QACrBjB,SAAS,GAAGL,KAAK,CAACM,MAAN,CAAaF,KAAb,CAAZ;;QAEA,IAAIC,SAAS,KAAKgB,MAAlB,EAA0B;UACxB,IAAIJ,SAAJ,EAAe;YACbQ,KAAK,IAAIJ,MAAM,GAAGL,QAAlB;YACAA,QAAQ,GAAG,EAAX;UACD;;UAEDC,SAAS,GAAG,IAAZ;QACD,CAPD,MAOO,IAAI,CAACA,SAAL,EAAgB;UACrBQ,KAAK,IAAIpB,SAAT;QACD,CAFM,MAEA,IAAIA,SAAS,KAAKd,aAAlB,EAAiC;UACtCY,QAAQ,IAAIsB,KAAK,GAAGJ,MAAR,GAAiBL,QAA7B;UACAO,KAAK,GAAGE,KAAR;UACA;QACD,CAJM,MAIA,IAAI/C,UAAU,CAAC2B,SAAD,CAAd,EAA2B;UAChCW,QAAQ,IAAIX,SAAZ;QACD,CAFM,MAEA;UACLoB,KAAK,IAAIJ,MAAM,GAAGL,QAAT,GAAoBX,SAA7B;UACAW,QAAQ,GAAG,EAAX;UACAC,SAAS,GAAG,KAAZ;QACD;;QAEDb,KAAK;MACN;IACF;EACF;;EAED,IAAIJ,KAAK,CAACM,MAAN,CAAaF,KAAb,MAAwBb,aAA5B,EAA2C;IACzC;EACD;EAED;;;EACA,IAAIU,MAAJ,EAAY;IACV,OAAO,IAAP;EACD;;EAEDE,QAAQ,IAAIZ,aAAZ;EAEAmC,GAAG,GAAGxB,IAAI,CAACgC,MAAL,CAAYC,GAAZ,CAAgBjC,IAAI,CAACkC,QAAL,CAAcV,GAAd,CAAhB,EAAoC3B,GAAG,CAACe,SAAD,CAAH,CAAeuB,IAAf,GAAsBC,GAA1D,EAA+D;IAACC,aAAa,EAAE;EAAhB,CAA/D,CAAN;;EAEA,IAAIhB,KAAJ,EAAW;IACTR,WAAW,GAAGhB,GAAG,CAACgB,WAAD,CAAH,CAAiBsB,IAAjB,GAAwBC,GAAtC;IACAf,KAAK,GAAGrB,IAAI,CAACgC,MAAL,CAAYC,GAAZ,CAAgBjC,IAAI,CAACkC,QAAL,CAAcb,KAAd,CAAhB,EAAsCR,WAAtC,CAAR;EACD;;EAEDc,IAAI,GAAG;IACLW,IAAI,EAAErB,OAAO,GAAG,OAAH,GAAa,MADrB;IAELI,KAAK,EAAEA,KAAK,IAAI,IAFX;IAGLG,GAAG,EAAEA;EAHA,CAAP;;EAMA,IAAIP,OAAJ,EAAa;IACXU,IAAI,CAACY,GAAL,GAAWvC,IAAI,CAACgC,MAAL,CAAYC,GAAZ,CAAgBjC,IAAI,CAACkC,QAAL,CAAchB,OAAd,CAAhB,EAAwCO,GAAxC,KAAgD,IAA3D;EACD,CAFD,MAEO;IACLC,IAAI,GAAG1B,IAAI,CAACwC,SAAL,EAAP;IACAb,IAAI,CAACc,QAAL,GAAgBzC,IAAI,CAAC0C,cAAL,CAAoBxB,OAApB,EAA6BO,GAA7B,CAAhB;IACAC,IAAI;EACL;;EAED,OAAO7B,GAAG,CAACI,QAAD,CAAH,CAAc0B,IAAd,CAAP;AACD"},"metadata":{},"sourceType":"script"}